name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  backend:
    name: Python Backend
    runs-on: ubuntu-latest
    env:
      ACTIONS_STEP_DEBUG: true
      ACTIONS_RUNNER_DEBUG: true
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: recursive
          # Use PAT for accessing private submodule
          token: ${{ secrets.MYTHOSMUD_PAT }}
      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: '3.12'
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -e .
          uv pip install -e ".[dev]"
      - name: Install Playwright browsers
        run: |
          source .venv/bin/activate
          playwright install chromium
          playwright install-deps
      - name: Initialize test database
        run: |
          source .venv/bin/activate
          # Set test environment variables for database initialization
          # CRITICAL: Use approved database locations per DATABASE PLACEMENT RULES
          export DATABASE_URL="sqlite+aiosqlite:///data/unit_test/players/unit_test_players.db"
          export DATABASE_NPC_URL="sqlite+aiosqlite:///data/unit_test/npcs/unit_test_npcs.db"
          export MYTHOSMUD_ADMIN_PASSWORD="test-admin-password"
          export MYTHOSMUD_SECRET_KEY="test-secret-key-for-ci-workflow"
          export MYTHOSMUD_JWT_SECRET="test-jwt-secret-for-ci-workflow"
          export MYTHOSMUD_RESET_TOKEN_SECRET="test-reset-token-secret-for-ci-workflow"
          export MYTHOSMUD_VERIFICATION_TOKEN_SECRET="test-verification-token-secret-for-ci-workflow"
          python server/tests/scripts/init_test_db.py
      - name: Verify test database
        run: |
          source .venv/bin/activate
          # Set test environment variables for database verification
          # CRITICAL: Use approved database locations per DATABASE PLACEMENT RULES
          export DATABASE_URL="sqlite+aiosqlite:///data/unit_test/players/unit_test_players.db"
          export DATABASE_NPC_URL="sqlite+aiosqlite:///data/unit_test/npcs/unit_test_npcs.db"
          export MYTHOSMUD_ADMIN_PASSWORD="test-admin-password"
          export MYTHOSMUD_SECRET_KEY="test-secret-key-for-ci-workflow"
          export MYTHOSMUD_JWT_SECRET="test-jwt-secret-for-ci-workflow"
          export MYTHOSMUD_RESET_TOKEN_SECRET="test-reset-token-secret-for-ci-workflow"
          export MYTHOSMUD_VERIFICATION_TOKEN_SECRET="test-verification-token-secret-for-ci-workflow"
          python server/tests/scripts/verify_test_db.py
      - name: Lint with ruff
        run: |
          source .venv/bin/activate
          python -m ruff check --line-length=120 server/
      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          # Set test environment variables for pytest
          # CRITICAL: Use approved database locations per DATABASE PLACEMENT RULES
          export DATABASE_URL="sqlite+aiosqlite:///data/unit_test/players/unit_test_players.db"
          export DATABASE_NPC_URL="sqlite+aiosqlite:///data/unit_test/npcs/unit_test_npcs.db"
          export MYTHOSMUD_ADMIN_PASSWORD="test-admin-password"
          export MYTHOSMUD_SECRET_KEY="test-secret-key-for-ci-workflow"
          export MYTHOSMUD_JWT_SECRET="test-jwt-secret-for-ci-workflow"
          export MYTHOSMUD_RESET_TOKEN_SECRET="test-reset-token-secret-for-ci-workflow"
          export MYTHOSMUD_VERIFICATION_TOKEN_SECRET="test-verification-token-secret-for-ci-workflow"
          python -m pytest server/tests/ --cov=server --cov-report=xml --cov-report=html --cov-fail-under=70 -v --tb=short
      - name: Upload coverage report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: coverage-html
          path: htmlcov/
      # FastAPI app smoke test removed; not needed for unit tests

  frontend:
    name: React Client
    runs-on: ubuntu-latest
    env:
      ACTIONS_STEP_DEBUG: true
      ACTIONS_RUNNER_DEBUG: true
    defaults:
      run:
        working-directory: client
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: recursive
          # Use PAT for accessing private submodule
          token: ${{ secrets.MYTHOSMUD_PAT }}
      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm install
      - name: Lint with ESLint
        run: |
          npx eslint .
      - name: Build React app
        run: npm run build
