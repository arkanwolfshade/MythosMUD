[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mythosmud"
version = "0.1.0"
description = "MythosMUD - A Cthulhu Mythos-themed MUD"
requires-python = ">=3.12"

dependencies = [
    "fastapi>=0.119.0",
    "uvicorn[standard]>=0.37.0",
    "pydantic>=2.12.2",
    "pydantic-settings>=2.0.0",
    "requests>=2.32.5",
    "httpx>=0.28.1",
    "argon2-cffi>=23.1.0,<24",
    "python-jose>=3.5.0",
    "faker>=37.11.0",
    "python-dotenv>=1.1.1",
    "sqlalchemy>=2.0.44",
    "structlog>=25.4.0",
    "fastapi-users[sqlalchemy]>=14.0.0",
    "setuptools<81",
    "pre-commit>=4.2.0",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "aiosqlite>=0.21.0",
    "pytest-asyncio>=1.2.0",
    "jsonschema>=4.20.0",
    "bleach>=6.1.0",
    "tqdm>=4.67.1",
    "click>=8.1.8", # Command line interface for command parsing and validation
    "pwdlib[bcrypt]>=0.2.1", # Required by fastapi-users (we override the hashing)
    "nats-py>=2.6.0", # NATS Python client for messaging
    "psutil>=7.1.0", # System and process utilities for memory monitoring
    "ftfy>=6.1.3", # Fixes "bad" Unicode input safely
    "strip-ansi>=0.1.1", # Removes ANSI escape codes
    "playwright>=1.55.0",
    "pytest-timeout>=2.4.0",
    "networkx>=3.0", # Graph analysis for alias cycle detection (CRITICAL-3 fix)
    "python-statemachine>=2.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "networkx>=3.5",
    "matplotlib>=3.10.5",
    "numpy>=2.3.2",
    "pytest-asyncio>=1.2.0",
    "debugpy>=1.8.15",
    "ruff>=0.14.1",
    "aiosqlite>=0.21.0",
    "pre-commit>=4.2.0",
    "mypy>=1.13.0",  # Static type checking
    "types-requests>=2.32.0",  # Type stubs for requests
    "types-python-dateutil>=2.9.0",  # Type stubs for dateutil
    "semgrep>=1.139.0",  # Static analysis for security and best practices
    "websocket-client>=1.9.0",  # WebSocket client for testing connection termination
]

[tool.setuptools.packages.find]
include = ["server*"]

[tool.ruff]
target-version = "py312"
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by line-length
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]
"docs/**/*" = ["F821", "F841", "F811", "B904", "E402"]

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["server"]
known_third_party = ["fastapi", "pydantic", "uvicorn", "requests", "httpx", "argon2", "jose", "faker", "dotenv", "sqlalchemy", "structlog", "fastapi_users", "pytest", "aiosqlite", "jsonschema", "bleach", "tqdm", "click", "passlib", "nats", "psutil", "ftfy", "strip_ansi", "playwright"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip_glob = ["**/node_modules/**", "**/__pycache__/**", "**/.git/**"]
force_sort_within_sections = true
lines_after_imports = 2

[tool.pytest.ini_options]
testpaths = ["server/tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

# Test discovery patterns
norecursedirs = [".git", ".tox", "dist", "build", "*.egg", "__pycache__", "node_modules"]

# Markers for test categories
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "security: Security tests",
    "performance: Performance tests",
    "slow: Slow running tests",
    "regression: Bug fix regression tests",
    "coverage: Coverage improvement tests",
    "monitoring: Monitoring tests",
    "verification: Verification tests"
]

# Coverage settings
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=server",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]

# Async support
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
python_version = "3.12"
files = ["server"]
exclude = [
    "^data/",
    "^client/",
    "^scripts/",
    "^docs/",
    "^tools/",
]
follow_imports = "skip"
ignore_missing_imports = true

# All checks disabled - enable one at a time
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false

# Display options
show_error_codes = true
show_column_numbers = true
show_error_context = true
pretty = true

# Per-module options
[[tool.mypy.overrides]]
module = [
    "argon2.*",
    "nats.*",
    "psutil.*",
    "ftfy.*",
    "strip_ansi.*",
    "playwright.*",
    "networkx.*",
    "statemachine.*",
    "click.*",
    "passlib.*",
    "jose.*",
    "faker.*",
    "dotenv.*",
    "structlog.*",
    "fastapi_users.*",
    "aiosqlite.*",
    "jsonschema.*",
    "bleach.*",
    "tqdm.*",
    "pwdlib.*",
]
ignore_missing_imports = true

# Temporarily relax strictness for logging while we incrementally add types
[[tool.mypy.overrides]]
module = [
    "server.logging.*",
]
ignore_errors = true

# Player GUID formatter relies on dynamic logging context; allow untyped for now
[[tool.mypy.overrides]]
module = [
    "server.logging.player_guid_formatter",
]
disallow_untyped_defs = false
check_untyped_defs = false

# Test files
[[tool.mypy.overrides]]
module = "server.tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false

[dependency-groups]
dev = [
    "ruff>=0.14.1",
    "mypy>=1.13.0",  # Static type checking
    "types-requests>=2.32.0",  # Type stubs for requests
    "types-python-dateutil>=2.9.0",  # Type stubs for dateutil
    "semgrep>=1.139.0",  # Static analysis for security and best practices
    "websocket-client>=1.9.0",  # WebSocket client for testing connection termination
]
